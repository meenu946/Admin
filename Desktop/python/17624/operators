SELECT 5+3;
-- 8
SELECT 5-3;
-- 2
SELECT 5*3;
-- 15
SELECT 5/3;
-- 1.6667
SELECT 5%3;
-- 2
SELECT 5=5;
-- 1
SELECT 5>3;
-- 1
SELECT 3<5;
-- 1
SELECT 5>=5;
-- 1
SELECT 5<=6;
-- 1
SELECT 5<>6;
-- 1
SELECT 59 & 47;
-- 43
SELECT 59 | 47;
-- 63
SELECT 59 ^ 47;
-- 20
SELECT 4!=6 AND 12>6;
-- 1
SELECT 5>4 AND 10=6;
-- 0 
SELECT NOT 3<5;
-- 0
SELECT 'Hello' LIKE '%o';
-- 1
SELECT 5 BETWEEN 1 AND 10;
-- 1 

INSERT INTO products (pid, pname, price, stock, location, release_date, last_updated)
VALUES 
(1, 'Laptop', '1200', 50, 'New York', '2023-01-15', '2023-01-20'),
(2, 'Smartphone', '800', 100, 'San Francisco', '2023-02-01', '2023-02-10'),
(3, 'Tablet', '500', 80, 'Los Angeles', '2023-03-10', '2023-03-15');


SELECT SUM(price) AS total_revenue 
FROM products;
-- total revenue - 2500.00
SELECT * 
FROM products 
WHERE price % 3 = 0;
describe products;
-- row 1 laptop
SELECT pid, pname, CAST(price AS DECIMAL(10, 2)) AS price, 
(CAST(price AS DECIMAL(10, 2)) - (SELECT AVG(CAST(price AS DECIMAL(10, 2))) FROM products)) AS price_difference 
FROM products;
-- price difference - 366.67, -33.33, -333.33
SELECT * 
FROM products 
WHERE price >= 50000;
-- empty

INSERT INTO customer (cid, cname, age, addr, phone)
VALUES 
(1, 'John Doe', 25, '123 Elm St', '1234567890'),
(2, 'Jane Smith', 30, '456 Oak St', '0987654321'),
(3, 'Alice Johnson', 35, '789 Pine St', '1112223333'),
(4, 'Bob Brown', 28, '101 Maple St', '4445556666'),
(5, 'Charlie Davis', 30, '202 Cedar St', '7778889999');

SELECT * 
FROM customer 
WHERE age != 30;
-- 1, 3, 4

INSERT INTO orders (oid, cid, pid, amount)
VALUES 
(1, 1, 1, 5000),
(2, 2, 2, 8000),
(3, 3, 3, 12000),
(4, 4, 1, 3000),
(5, 2, 3, 15000);

SELECT * 
FROM orders 
WHERE amt <= 10000;
-- 1, 2, 4
SELECT * 
FROM products 
WHERE location = 'Mumbai' 
AND stock > 10;
-- empty
SELECT * 
FROM customer 
WHERE addr LIKE '%Mumbai%' 
OR 
(SELECT SUM(amount) 
FROM orders o 
WHERE o.cid = customer.cid) > 20000;
-- 2

INSERT INTO payment (pay_id, oid, amount, mode, status)
VALUES 
(1, 1, 5000, 'card', 'completed'),
(2, 2, 8000, 'net banking', 'completed'),
(3, 3, 12000, 'cash', 'pending'),
(4, 4, 3000, 'wallet', 'completed'),
(5, 5, 15000, 'upi', 'completed');

SELECT * 
FROM payment 
WHERE mode != 'upi' 
AND status = 'completed';
describe payment;
-- 1, 2, 4