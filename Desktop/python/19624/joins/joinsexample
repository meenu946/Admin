CREATE DATABASE ecommerce;
USE ecommerce;

CREATE TABLE Users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_id INT,
    quantity INT NOT NULL,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(id),
    FOREIGN KEY (product_id) REFERENCES Products(id)
);

CREATE TABLE Reviews (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    product_id INT,
    rating INT NOT NULL,
    comment TEXT,
    review_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(id),
    FOREIGN KEY (product_id) REFERENCES Products(id)
);
INSERT INTO Users (username, email) VALUES
('alice', 'alice@example.com'),
('bob', 'bob@example.com'),
('charlie', 'charlie@example.com');

INSERT INTO Products (name, price, stock) VALUES
('Laptop', 999.99, 10),
('Smartphone', 499.99, 20),
('Tablet', 299.99, 30);

INSERT INTO Orders (user_id, product_id, quantity) VALUES
(1, 1, 1),
(2, 2, 2),
(3, 3, 1),
(1, 2, 1),
(2, 3, 1);

INSERT INTO Reviews (user_id, product_id, rating, comment) VALUES
(1, 1, 5, 'Excellent laptop!'),
(2, 2, 4, 'Great phone.'),
(3, 3, 3, 'Average tablet.'),
(1, 3, 4, 'Good tablet.');

-- inner join
SELECT u.username, o.id AS order_id, p.name AS product_name, o.quantity
FROM Orders o
INNER JOIN Users u ON o.user_id = u.id
INNER JOIN Products p ON o.product_id = p.id;
/*
alice	1	Laptop	1
alice	4	Smartphone	1
bob	2	Smartphone	2
bob	5	Tablet	1
charlie	3	Tablet	1
*/

-- left outer join
SELECT u.username, o.id AS order_id, p.name AS product_name, o.quantity
FROM Users u
LEFT JOIN Orders o ON u.id = o.user_id
LEFT JOIN Products p ON o.product_id = p.id;
/*
alice	1	Laptop	1
alice	4	Smartphone	1
bob	2	Smartphone	2
bob	5	Tablet	1
charlie	3	Tablet	1
*/

-- right outer join
SELECT u.username, o.id AS order_id, p.name AS product_name, o.quantity
FROM Orders o
RIGHT JOIN Users u ON o.user_id = u.id
RIGHT JOIN Products p ON o.product_id = p.id;
/*
SELECT u.username, o.id AS order_id, p.name AS product_name, o.quantity
FROM Orders o
RIGHT JOIN Users u ON o.user_id = u.id
RIGHT JOIN Products p ON o.product_id = p.id;
*/

-- full outer join
SELECT u.username, o.id AS order_id, p.name AS product_name, o.quantity
FROM Users u
LEFT JOIN Orders o ON u.id = o.user_id
LEFT JOIN Products p ON o.product_id = p.id
UNION
SELECT u.username, o.id AS order_id, p.name AS product_name, o.quantity
FROM Orders o
RIGHT JOIN Users u ON o.user_id = u.id
RIGHT JOIN Products p ON o.product_id = p.id;
/*
alice	1	Laptop	1
alice	4	Smartphone	1
bob	2	Smartphone	2
bob	5	Tablet	1
charlie	3	Tablet	1
*/

-- self join
SELECT u1.username AS user1, u2.username AS user2
FROM Users u1
INNER JOIN Users u2 ON u1.id != u2.id;
/*
charlie	alice
bob	alice
charlie	bob
alice	bob
bob	charlie
alice	charlie
*/

-- cross join
SELECT u.username, p.name AS product_name
FROM Users u
CROSS JOIN Products p;
/*
charlie	Laptop
bob	Laptop
alice	Laptop
charlie	Smartphone
bob	Smartphone
alice	Smartphone
charlie	Tablet
bob	Tablet
alice	Tablet
*/